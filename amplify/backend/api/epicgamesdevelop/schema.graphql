type Publisher
  @model(subscriptions: null)
  @auth(
    rules: [
      { allow: groups, groups: ["Admin"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  name: String!
  games: [Game] @connection
}

type User
  @model
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]) {
  id: ID!
  username: String!
  displayName: String!
  games: [UserGame] @connection(keyName: "ListByUser", fields: ["id"])
}

# How to automatically connect the UserGames to User instead of using a hardcoded array of games?

type Game
  @model(subscriptions: null)
  @auth(
    rules: [
      { allow: groups, groups: ["Admin", "Publisher"] }
      { allow: private, operations: [read] }
      { allow: public, operations: [read] }
    ]
  ) {
  id: ID!
  title: String!
  description: String
  price: Float!
  discount: Float
  releaseDate: String!
  tags: [GameGenre]!
  longDesc: String
  platform: String
  languages: String
  spec: String
  publisherId: ID!
  image: String
  subimage: String
  publisher: Publisher @connection
}

type UserGame
  @model
  @key(
    name: "ListByUser"
    fields: ["userId", "status", "createdOn"]
    queryField: "favoritesByUserAndStatus"
  )
  @key(
    name: "GetGameByUser"
    fields: ["userId", "gameId"]
    queryField: "favoritesByUserAndGame"
  )
  @auth(rules: [{ allow: owner }, { allow: groups, groups: ["Admin"] }]) {
  id: ID!
  userId: ID!
  gameId: ID!
  game: Game @connection(fields: ["gameId"])
  user: User @connection(fields: ["userId"])
  status: GameListType
  createdOn: String
}

enum GameGenre {
  Action
  Adventure
  Indie
  RPG
  Strategy
  OpenWorld
  Shooter
  Puzzle
  FirstPerson
  Narration
  Simulation
  Casual
  TurnBased
  Exploration
  Horror
  Platformer
  Party
  Survival
  Trivia
  CityBuilder
  Stealth
  Fighting
  Comedy
  ActionAdventure
  Racing
  RogueLite
  CardGame
  Game
  Sports
}

enum GameListType {
  Wishlisted
  InCart
  Purchased
}
